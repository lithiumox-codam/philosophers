NAME = philosophers
V_SRC = vec_apply vec_free vec_insert vec_remove vec_set vec_count vec_get vec_pop vec_replace vec_find vec_init vec_push vec_resize
V_SRCS = $(addprefix vector/, $(V_SRC))
SRC = main $(V_SRCS)
SRCS = $(addsuffix .c, $(addprefix src/, $(SRC)))
OBJS = $(patsubst src/%.c, build/%.o, $(SRCS))

CODAM_FLAGS = -Wall -Wextra -Werror
INCLUDES = -I $(CURDIR)/includes

COLOR_INFO = \033[1;36m
COLOR_SUCCESS = \033[1;32m
COLOR_RESET = \033[0m

EMOJI_INFO = ðŸŒˆ
EMOJI_SUCCESS = ðŸŽ‰
EMOJI_CLEAN = ðŸ§¹
EMOJI_RUN = ðŸš€

all: $(NAME)

$(NAME): $(OBJS)
	@printf "$(COLOR_INFO)$(EMOJI_INFO)  Compiling $(NAME)...$(COLOR_RESET)\t"
	@cc $(OBJS) $(CODAM_FLAGS) $(LINKER) $(INCLUDES) -o $@
	@sleep 0.25
	@printf "âœ…\n"

build/%.o: %.c includes/philo.h includes/vector.h
	@mkdir -p $(@D)
	@cc $(INCLUDES) $(CODAM_FLAGS) -c $< -o $@

clean:
	@printf "$(COLOR_INFO)$(EMOJI_CLEAN)  Cleaning up...$(COLOR_RESET)\t\t"
	@rm -rf build
	@sleep 0.25
	@printf "âœ…\n"

fclean: clean
	@printf "$(COLOR_INFO)$(EMOJI_CLEAN)  Removing executable...$(COLOR_RESET)\t"
	@rm -f $(NAME)
	@sleep 0.25
	@printf "âœ…\n"

run: $(NAME)
	@printf "$(COLOR_INFO)$(EMOJI_RUN)  Compiled and started $(NAME)...$(COLOR_RESET)"
	@./$(NAME) 1

norm:
	@norminette $(SRCS) includes

re: fclean $(NAME)

bonus: all

module-update:
	@printf "$(COLOR_INFO)$(EMOJI_INFO)  Updating submodules...$(COLOR_RESET)\t"
	@git submodule update --remote --merge
	@sleep 0.25
	@printf "âœ…\n"

.PHONY: all clean fclean run re module-update
